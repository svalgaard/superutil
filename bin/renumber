#! /usr/bin/env python
#
# Rename and number a bunch of files
#
# Usage: renumber prefix onefile anotherfile etc and so on
#
# (c) 2016, Jens Svalgaard Kohrt
#
import glob
import os
import re
import shutil
import sys


def usage():
    print 'Usage: %s [-s] [-u] [-l] prefix filename(s)' % sys.argv[0]
    print
    print 'You are asked for confirmation before any files are renamed.'
    print ' -s do not prefix the number with a dash'
    print ' -u make the entire filename uppercase'
    print ' -l make the entire filename lowercase'
    sys.exit(0)


def main():
    DASH_PREFIX = True
    UPPERCASE = False
    LOWERCASE = False
    args = sys.argv
    while len(args) > 1:
        if args[1] == '-s':
            DASH_PREFIX = False
            del args[1]
            continue
        if args[1] == '-u':
            UPPERCASE = True
            del args[1]
            continue
        if args[1] == '-l':
            LOWERCASE = True
            del args[1]
            continue
        break

    if len(args) < 3:
        usage()
    m = re.match('^-(\\d+)$', args[1])
    if m:
        length = int(m.group(1))
        del args[1]
    else:
        length = 2

    prefix = args[1].rstrip('-')
    if DASH_PREFIX:
        prefix += '-'
    lfns = args[2:]
    if not prefix:
        usage()

    pdn = os.path.dirname(prefix) or '.'
    pfn = os.path.basename(prefix)
    assert os.path.isdir(pdn)
    assert pfn

    cre = re.compile(r'^([0-9]+)(|\.[^.]+)$')
    xs = [cre.match(fn[len(pfn):]) for fn in os.listdir(pdn) if fn.startswith(pfn)]
    xs = [int(x.group(1)) for x in xs if x]
    first = max(xs)+1 if xs else 0
    last = first + len(lfns) - 1

    pattern = '%s%%0%dd%%s' % (prefix, max(length,len(str(last))))
    print pattern
    nlfns = []
    for i in range(len(lfns)):
        ext = os.path.splitext(lfns[i])[1]
        nlfn = pattern % (first + i, ext)
        if UPPERCASE:
            nlfn = nlfn.upper()
        if LOWERCASE:
            nlfn = nlfn.lower()
        nlfns.append(nlfn)
        print lfns[i], '-->', nlfns[i]
        if not os.path.exists(lfns[i]):
            print 'ERROR: %s does not exist!' % lfns[i]
            sys.exit(1)

    print
    raw_input("Press ENTER to start renaming (or CTRL-c to QUIT)")
    print

    for i in range(len(nlfns)):
        lfn, nlfn = lfns[i], nlfns[i]
        try:
            os.rename(lfn, nlfn)
        except OSError, o: # Probably a cross-device link error
            shutil.copy(lfn, nlfn)
            os.unlink(lfn)

    print 'Renaming done.'

if __name__ == '__main__':
    main()

