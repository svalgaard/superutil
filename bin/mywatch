#! /usr/bin/env python
#
# Watch file $1. When changed run command $2...
#
# (c) 2016, Jens Svalgaard Kohrt
#

import os
import sys
import time
import stat

# if true use pdf as standard for latex
pdf = True


def latexon(fn):
    global pdf
    # latex = pdf and "pdflatex" or "latex"
    # return "%s '\\nonstopmode\\input{%s}'" % (latex,fn)
    updf = pdf and " --pdf" or ""
    return "rubber%s -v %s" % (updf, fn)


def findcmd(fn, cmd):
    if cmd != "":
        pass
    elif fn.endswith(".tex"):
        runon = fn
        # find name of master file :)
        lines = filter(lambda x: x.lower().find(
            "tex-master") >= 0, open(fn).readlines())
        if lines:
            runon = lines[0].split(":")[1].strip().replace('"', '')
        cmd = latexon(runon)
    elif fn.endswith(".py"):
        cmd = 'sleep 0.25s ; %s' % fn
    else:
        cmd = ""
    return cmd


def tryfn(f, s):
    try:
        return f(s)
    except:
        return None


def main(argv):
    global pdf
    if argv[1] == "--ps":
        del argv[1]
        pdf = False

    if argv[1] == "--pdf":
        del argv[1]
        pdf = True

    if argv[1] == "--" and argv.count("--") == 2:
        fns = []
        for i in range(2, len(argv)):
            if argv[i] == "--":
                break
            fns.append(argv[i])
        cmds = [findcmd(fn, " ".join(argv[i + 1:])) for fn in fns]
    else:
        fns = argv[1].split(",")
        cmds = [findcmd(fn, " ".join(argv[2:])) for fn in fns]

    allsame = True
    for cmd in cmds[1:]:
        if cmd != cmds[0]:
            allsame = False
            break

    if len(filter(None, cmds)) != len(cmds):
        print "Please provide a command to run!"
        sys.exit(1)

    if len(fns) == 1:
        print "Running the following command, when %s is changed" % fns[0]
        print "Cmd: %s" % cmds[0]
    elif allsame:
        print "Running the following command, when one of the following files are changed"
        print "  '" + "', '".join(fns) + "'"
        print "Cmd: %s" % cmds[0]
    else:
        print "Running the following commands:"
        for i in range(len(fns)):
            print "    %s [%s]" % (cmds[i], fns[i])

    stats = [None] * len(fns)

    while True:
        nstats = [tryfn(lambda fn: os.stat(fn)[stat.ST_MTIME], fn)
                  for fn in fns]

        run = False
        for i in range(len(stats)):
            if nstats[i] and nstats[i] != stats[i]:
                if allsame:
                    run = True
                else:
                    print "Running", cmds[i]
                    os.system(cmds[i])
        stats = nstats

        if allsame and run:
            print "Running", cmds[i]
            os.system(cmds[i])
            print "Done."

        time.sleep(.25)

main(sys.argv)
